import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans


# Charger les données depuis le fichier CSV en spécifiant le séparateur
df = pd.read_csv('Janvier2023.csv', sep=';')

# Fonction pour extraire les heures à partir de la chaîne 'XXhYY'
def extract_hours(hour_string):
    try:
        return float(hour_string.split('h')[0])
    except:
        return None

# Appliquer la fonction d'extraction sur la colonne 'Ensoleillement' pour obtenir les heures
df['Station'] = df['Temperature moy.'].apply(extract_hours)

# Exclure les lignes avec des valeurs manquantes
df = df.dropna(subset=['Station'])

# Réinitialiser l'index après avoir filtré les données
df = df.reset_index(drop=True)

# Exclure la colonne 'Ensoleillement'
features = df[['Temperature moy.', 'Station']]

# Spécifier le nombre de clusters que vous souhaitez
num_clusters = 3

# Ajouter l'argument `n_init` explicitement pour éviter l'avertissement
kmeans = KMeans(n_clusters=num_clusters, n_init=10)  # Vous pouvez ajuster la valeur selon vos besoins

# Appliquer l'algorithme K-means
df['cluster'] = kmeans.fit_predict(features)

# Visualisation des clusters
plt.scatter(df['Temperature moy.'], df['Station'], c=df['cluster'], cmap='rainbow')
plt.title('Comparatif du mois de janvier pour toutes les stations')
plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1], s=300, c='blue', marker='o', label='Centers')
plt.xlabel('Temperature Moyenne')
plt.ylabel('Stations')
plt.show()
